$action-tile-width: 320px;
$action-center-item-width: 200px;

$tilesize: 150px;
$tilesize-sm: $tilesize * 0.75;
$tilesize-lg: $tilesize * 1.5;

@mixin action-container() {
    // common properties for all action containers - button, tile and action-center 
    border: 1px solid $border-color;
    border-radius: $border-radius;
    padding: $cell-padding-y $cell-padding-x;
    color: $component-color;
}

.hs-action-header {
    color: $component-color;
    font-weight: 700;
}

.hs-action-metric {
    font-size: 3rem;
    font-weight: 500;
    color: $info;
}

.hs-action-group-title {
    font-size: $lead-font-size;
    font-weight: 700;
    color: $component-color;
    border-bottom: 2px solid $primary;
    padding: $header-cell-padding-y $header-cell-padding-x;
}

@each $color,
$value in $theme-colors {
    &.hs-action-#{$color} {

        .hs-action-metric,
        .hs-action-icon {
            color: $value;
        }
    }
}

.hs-action-tiles-list {
    display: grid;
    grid-gap: 1em;
}

.hs-action-tiles-group {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($action-tile-width, 1fr));
    grid-gap: 0.5em;
}

.hs-action-button {
    display: flex;
    flex-direction: column;
    @include action-container();
    width: $action-tile-width / 2;

    .hs-action-metric {
        font-size: 2.8rem;
        align-self: center;
    }

    .hs-action-todo {
        align-self: center;
        text-align: center;
    }

}

.hs-action-tile {
    display: flex;
    flex-flow: column nowrap;
    @include action-container();
    width: $action-tile-width;

    .hs-action-detail {
        font-size: $small-font-size;
    }

    .hs-action-todo {
        margin-top: auto;
        margin-bottom: 0.5em;
        padding: 0.25rem 0.25rem;
        border: 1px solid $border-color;
        box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 6px;

        &.no-shadow {
            box-shadow: none;
        }

        &:hover {
            background-color: $hovered-bg;
            color: $hovered-text;
        }
    }
}

.hs-action-center {
    @include action-container();
    width: 100%;
    padding: 0 0;
    align-self: start;

    .hs-action-center-items {
        padding: $cell-padding-y $cell-padding-x;
        background-color: $light;
        display: grid;
        grid-template-columns: repeat(auto-fit, $action-center-item-width);
        grid-gap: 1em;

        .hs-action-item {
            width: $action-center-item-width;
            display: grid;
            grid-column-gap: .5rem;
            grid-template-columns: 22px 1fr;
            grid-template-rows: 1.4em 1.1rem;
            overflow: hidden;
            grid-template-areas: "a b""a c";

            .hs-action-icon {
                grid-area: a;
                align-self: center;

                >* {
                    font-size: 22px;
                }
            }

            .hs-action-title {
                grid-area: c;
                font-size: $small-font-size;
            }

            .hs-action-metric {
                align-self: center;
                grid-area: b;
                font-size: $lead-font-size;
                font-weight: 500;
                color: $info;
            }
        }
    }
}

// eye candy folder corner effect on hover
.hs-action-sugar {

    .hs-action-button,
    .hs-action-tile {
        position: relative;

        &:hover {
            border-top-right-radius: 26px;

            &:before {
                content: "";
                position: absolute;
                top: 0;
                right: -2px;
                border-width: 0 18px 20px 0;
                border-style: solid;
                border-color: $border-color #fff;
            }
        }
    }

}

// Block Tile Containers
.hs-listview-tile-grid > .k-listview-content, 
.hs-tile-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, $tilesize);
    grid-gap: 1em;
}

.hs-listview-tile-grid-sm > .k-listview-content, 
.hs-tile-grid-sm {
    @extend .hs-tile-grid;
    grid-template-columns: repeat(auto-fill, $tilesize-sm);

    >.hs-tile {
        width: $tilesize-sm;
        height: $tilesize-sm;
    }
}

.hs-listview-tile-grid-lg > .k-listview-content, 
.hs-tile-grid-lg {
    @extend .hs-tile-grid;
    grid-template-columns: repeat(auto-fill, $tilesize-lg);

    >.hs-tile {
        width: $tilesize-lg;
        height: $tilesize-lg;
    }
}

.hs-tile {
    overflow: hidden;
    width: $tilesize;
    height: $tilesize;
    background-color: $info;
    color: set-textcolor($info);
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    text-align: center;

    &:hover {
        cursor: pointer;
        background-color: darken($info, 5%);
    }

    & a {
        text-decoration: none;
        color: set-textcolor($info);
    }
    > div {
        margin:.25rem .5rem .25rem .5rem;
    }
}

// standalone tile sizes
.hs-tile-sm {
    @extend .hs-tile;
    width: $tilesize-sm;
    height: $tilesize-sm;
}

.hs-tile-lg {
    @extend .hs-tile;
    width: $tilesize-lg;
    height: $tilesize-lg;
    > div {
        margin:.5rem;
    }
}

// individual tile colors
@each $color,
$value in $theme-colors {
    &.hs-tile-#{$color} {
        background-color: $value !important;
        color: set-textcolor($value) !important;
        & a {
            color: set-textcolor($value) !important;
        }
        &:hover {
            background-color: darken($value, 5%) !important;
        }
    }
}
// grouped tile colors
@each $color,
$value in $theme-colors {
    &.hs-tile-grid-#{$color} {
        .hs-tile {
            background-color: $value;
            color: set-textcolor($value);
            & a {
                color: set-textcolor($value);
            }
            &:hover {
                background-color: darken($value, 5%);
            }
        }
    }
}