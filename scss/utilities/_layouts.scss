// 
// Not to be confused with Kendo Grids or Bootstrap Grid Layout
// these create helper classes for using CSS Grids in Handshake Skin Layouts
//

$grid-gapbase: 0.125rem;
$grid-mincol: map-get($container-max-widths, "sm") / 2;
$grid-max: 2400px;

@mixin hs-grid-common() {
  max-width: $grid-max;
  display: grid;
  grid-gap: $grid-gapbase;

  grid-template-columns: minmax($grid-mincol, 1fr);

  // define all grid areas, even though some implemenations don't use them all.
  &>.sidebar1 {
    grid-area: sidebar1;
  }

  &>.sidebar2 {
    grid-area: sidebar2;
  }

  &>.main {
    grid-area: main;
  }

  &>.footer {
    grid-area: footer;
  }

  &>.header {
    grid-area: header;
  }
}

.hs-grid-nogap {
  grid-gap: 0 !important;
}

.hs-grid-center-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.hs-grid {
  @include hs-grid-common();

  @media screen and (min-width: map-get($container-max-widths, "md")) {
    grid-gap: $grid-gapbase * 3;
    grid-template-columns: repeat(auto-fit, minmax($grid-mincol, 1fr));

    .hs-grid-double {
      grid-column: span 2;
    }

    .hs-grid-triple {
      grid-column: span 3;
    }

    .hs-grid-quad {
      grid-column: span 4;
    }
  }
}

.hs-grid-84split,
.hs-grid-48split {
  @include hs-grid-common();
  grid-template-areas: "sidebar1""main";

  @media screen and (min-width: map-get($container-max-widths, "md")) {
    grid-gap: $grid-gapbase * 3;
    grid-template-columns: repeat(3, minmax($grid-mincol, 1fr));
    grid-template-areas: "sidebar1 main main";
  }
}

.hs-grid-48split {
  grid-template-areas: "main""sidebar1";

  @media screen and (min-width: map-get($container-max-widths, "md")) {
    grid-template-areas: "main main sidebar1";
  }
}

.hs-grid-magazine {
  @include hs-grid-common();
  // stacked for mobile
  grid-template-areas: "header""main""sidebar1""sidebar2""footer";

  // tablet screen
  @include media-breakpoint-between("md", "lg", $grid-breakpoints) {
    grid-gap: $grid-gapbase * 3;
    grid-template-columns: minmax($grid-mincol, 1fr) minmax($grid-mincol, 2fr);
    grid-template-rows: auto;
    grid-template-areas:
      "header header"
      "sidebar1 main"
      "sidebar2 main"
      "footer footer";

    &.hs-grid-content-left {
      grid-template-columns: minmax($grid-mincol, 2fr) minmax($grid-mincol, 1fr);
      grid-template-areas:
        "header header"
        "main sidebar1"
        "main sidebar2"
        "footer footer";
    }

    &.hs-grid-topbars {
      grid-template-columns: repeat(2, minmax($grid-mincol, 1fr));
      grid-template-areas:
        "header header"
        "sidebar1 sidebar2"
        "main main"
        "footer footer";
    }
  }

  // x-large monitors
  @media screen and (min-width: map-get($container-max-widths, "lg")+1) {
    grid-gap: $grid-gapbase * 4;
    grid-template-columns: minmax($grid-mincol, 1fr) minmax($grid-mincol, 2fr) minmax($grid-mincol, 1fr);
    grid-template-rows: auto;
    grid-template-areas:
      "header header header"
      "sidebar1 main sidebar2"
      "footer footer footer";
  }
}